{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport * as usuariosActions from '../actions/usuarios.actions';\nimport { mergeMap, map, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../../services/usuario.service\";\nexport let UsuariosEffects = /*#__PURE__*/(() => {\n  class UsuariosEffects {\n    constructor(actions$, usuarioService) {\n      this.actions$ = actions$;\n      this.usuarioService = usuarioService;\n      this.cargarUsuarios$ = createEffect(() => this.actions$.pipe(ofType(usuariosActions.cargarUsuarios), mergeMap(() => this.usuarioService.getUsers().pipe(map(users => usuariosActions.cargarUsuariosSuccess({\n        usuarios: users\n      })), catchError(err => of(usuariosActions.cargarUsuariosError({\n        payload: err\n      })))))));\n    }\n    static #_ = this.ɵfac = function UsuariosEffects_Factory(t) {\n      return new (t || UsuariosEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.UsuarioService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UsuariosEffects,\n      factory: UsuariosEffects.ɵfac\n    });\n  }\n  return UsuariosEffects;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}