{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport * as usuariosActions from '../actions';\nimport { mergeMap, map, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../../services/usuario.service\";\nexport let UsuarioEffects = /*#__PURE__*/(() => {\n  class UsuarioEffects {\n    constructor(actions$, usuarioService) {\n      this.actions$ = actions$;\n      this.usuarioService = usuarioService;\n      this.cargarUsuario$ = createEffect(() => this.actions$.pipe(ofType(usuariosActions.cargarUsuario), mergeMap(action => this.usuarioService.getUserById(action.id).pipe(map(user => usuariosActions.cargarUsuarioSuccess({\n        usuario: user\n      })), catchError(err => of(usuariosActions.cargarUsuarioError({\n        payload: err\n      })))))));\n    }\n    static #_ = this.ɵfac = function UsuarioEffects_Factory(t) {\n      return new (t || UsuarioEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.UsuarioService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UsuarioEffects,\n      factory: UsuarioEffects.ɵfac\n    });\n  }\n  return UsuarioEffects;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}